var e=Object.defineProperty,t=(t,r,a)=>(((t,r,a)=>{r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a})(t,"symbol"!=typeof r?r+"":r,a),a);import{b as r,u as a,c as s}from"./query-9fe77bbe.js";import{B as l}from"./BaseService-e2aecc13.js";import{M as n,n as c}from"./index-654029b0.js";const i=new class extends l{constructor(){super(...arguments),t(this,"tableName","clients")}async getClients(e,t){try{let r=n.from(this.tableName).select("*").order("created_at",{ascending:!1});if(e&&(e.status&&(r=r.eq("status",e.status)),void 0!==e.bilingual_preference&&(r=r.eq("bilingual_preference",e.bilingual_preference)),e.name_search&&(r=r.ilike("name",`%${e.name_search}%`)),e.email_search&&(r=r.ilike("email",`%${e.email_search}%`)),e.phone_search&&(r=r.ilike("phone",`%${e.phone_search}%`))),t){const{page:e=1,limit:a=10}=t,s=(e-1)*a,l=s+a-1;r=r.range(s,l)}const{data:a,error:s}=await r;return s?{data:null,error:s.message,success:!1}:{data:a||[],error:null,success:!0}}catch(r){return{data:null,error:"Failed to fetch clients",success:!1}}}async getClient(e){try{const{data:t,error:r}=await n.from(this.tableName).select("*").eq("id",e).single();return r?{data:null,error:r.message,success:!1}:{data:t,error:null,success:!0}}catch(t){return{data:null,error:"Failed to fetch client",success:!1}}}async createClient(e){try{const{data:t,error:r}=await n.from(this.tableName).insert(e).select().single();return r?{data:null,error:r.message,success:!1}:{data:t,error:null,success:!0}}catch(t){return{data:null,error:"Failed to create client",success:!1}}}async updateClient(e,t){try{const{data:r,error:a}=await n.from(this.tableName).update({...t,updated_at:(new Date).toISOString()}).eq("id",e).select().single();return a?{data:null,error:a.message,success:!1}:{data:r,error:null,success:!0}}catch(r){return{data:null,error:"Failed to update client",success:!1}}}async deleteClient(e){try{const{error:t}=await n.from(this.tableName).delete().eq("id",e);return t?{data:null,error:t.message,success:!1}:{data:!0,error:null,success:!0}}catch(t){return{data:null,error:"Failed to delete client",success:!1}}}async getClientStats(){try{const{data:e,error:t}=await n.from(this.tableName).select("status, bilingual_preference, created_at");if(t)return{data:null,error:t.message,success:!1};return{data:{total:e.length,leads:e.filter(e=>"lead"===e.status).length,prospects:e.filter(e=>"prospect"===e.status).length,active:e.filter(e=>"active"===e.status).length,churned:e.filter(e=>"churned"===e.status).length,bilingualClients:e.filter(e=>e.bilingual_preference).length,recentlyAdded:e.filter(e=>{const t=new Date(e.created_at),r=new Date;return r.setDate(r.getDate()-7),t>r}).length},error:null,success:!0}}catch(e){return{data:null,error:"Failed to fetch client stats",success:!1}}}async searchClients(e){try{const{data:t,error:r}=await n.from(this.tableName).select("*").or(`name.ilike.%${e}%,email.ilike.%${e}%,phone.ilike.%${e}%`).order("created_at",{ascending:!1}).limit(20);return r?{data:null,error:r.message,success:!1}:{data:t||[],error:null,success:!0}}catch(t){return{data:null,error:"Failed to search clients",success:!1}}}async getRecentClients(e=5){try{const{data:t,error:r}=await n.from(this.tableName).select("*").order("created_at",{ascending:!1}).limit(e);return r?{data:null,error:r.message,success:!1}:{data:t||[],error:null,success:!0}}catch(t){return{data:null,error:"Failed to fetch recent clients",success:!1}}}async getClientsByStatus(e){try{const{data:t,error:r}=await n.from(this.tableName).select("*").eq("status",e).order("created_at",{ascending:!1});return r?{data:null,error:r.message,success:!1}:{data:t||[],error:null,success:!0}}catch(t){return{data:null,error:"Failed to fetch clients by status",success:!1}}}subscribeToClients(e){return n.channel("clients_changes").on("postgres_changes",{event:"*",schema:"public",table:"clients"},e).subscribe()}subscribeToClientStats(e){return n.channel("client_stats_changes").on("postgres_changes",{event:"*",schema:"public",table:"clients"},e).subscribe()}},u={all:["clients"],lists:()=>[...u.all,"list"],list:e=>[...u.lists(),{filters:e}],details:()=>[...u.all,"detail"],detail:e=>[...u.details(),e],stats:()=>[...u.all,"stats"],recent:e=>[...u.all,"recent",e],byStatus:e=>[...u.all,"byStatus",e],search:e=>[...u.all,"search",e]};function o(e){return r({queryKey:u.list(e),queryFn:()=>i.getClients(e),select:e=>e.data||[],staleTime:3e5})}function d(){return r({queryKey:u.stats(),queryFn:()=>i.getClientStats(),select:e=>e.data,staleTime:12e4,refetchInterval:3e5})}function y(){const e=a();return s({mutationFn:e=>i.createClient(e),onSuccess:t=>{t.data?(e.invalidateQueries({queryKey:u.lists()}),e.invalidateQueries({queryKey:u.stats()}),e.invalidateQueries({queryKey:u.recent(5)}),c.success("Client created successfully!")):c.error(t.error||"Failed to create client")},onError:e=>{c.error("Failed to create client")}})}function h(){const e=a();return s({mutationFn:({id:e,...t})=>i.updateClient(e,t),onSuccess:(t,r)=>{t.data?(e.setQueryData(u.detail(r.id),t.data),e.invalidateQueries({queryKey:u.lists()}),e.invalidateQueries({queryKey:u.stats()}),e.invalidateQueries({queryKey:u.recent(5)}),c.success("Client updated successfully!")):c.error(t.error||"Failed to update client")},onError:e=>{c.error("Failed to update client")}})}function m(){const e=a();return s({mutationFn:e=>i.deleteClient(e),onSuccess:(t,r)=>{t.data?(e.removeQueries({queryKey:u.detail(r)}),e.invalidateQueries({queryKey:u.lists()}),e.invalidateQueries({queryKey:u.stats()}),e.invalidateQueries({queryKey:u.recent(5)}),c.success("Client deleted successfully!")):c.error(t.error||"Failed to delete client")},onError:e=>{c.error("Failed to delete client")}})}export{o as a,y as b,h as c,m as d,d as u};
